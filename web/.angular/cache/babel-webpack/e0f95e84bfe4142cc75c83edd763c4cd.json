{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/storage\";\nimport * as i2 from \"../core/service/local-storage.service\";\nexport let FirebaseService = /*#__PURE__*/(() => {\n  class FirebaseService {\n    constructor(storage, localStorage) {\n      this.storage = storage;\n      this.localStorage = localStorage;\n      this.pictures = [];\n    }\n\n    uploadListImageToFirebase(files) {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.pictures = this.localStorage.getListPictureUrl();\n\n        for (let i = 0; i < files.length; i++) {\n          yield this.UpdateImageToFirebase(files[i], true);\n        }\n      });\n    }\n\n    UpdateImageToFirebase(file, isFileList) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const metadata = {\n          contentType: 'image/jpeg'\n        };\n        const filePath = 'img/' + Date.now();\n        const fileRef = this.storage.ref(filePath);\n        yield this.storage.upload(filePath, file);\n        yield fileRef.getDownloadURL().subscribe(url => {\n          if (url && isFileList) {\n            this.pictures.push(url);\n            this.localStorage.setListPictureUrls(this.pictures);\n          } else if (url && !isFileList) {\n            this.localStorage.setPicture(url);\n          }\n        });\n      });\n    }\n\n  }\n\n  FirebaseService.ɵfac = function FirebaseService_Factory(t) {\n    return new (t || FirebaseService)(i0.ɵɵinject(i1.AngularFireStorage), i0.ɵɵinject(i2.LocalStorageService));\n  };\n\n  FirebaseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FirebaseService,\n    factory: FirebaseService.ɵfac,\n    providedIn: 'root'\n  });\n  return FirebaseService;\n})();","map":null,"metadata":{},"sourceType":"module"}