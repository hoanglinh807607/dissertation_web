{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { LocationSearching } from '../models/locationSearching';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let LocalStorageService = /*#__PURE__*/(() => {\n  class LocalStorageService {\n    constructor(router) {\n      this.router = router;\n      this.storageSub$ = new Subject();\n    }\n\n    watchStorage() {\n      return this.storageSub$.asObservable();\n    }\n\n    setItem(key, data) {\n      localStorage.setItem(key, data);\n      this.storageSub$.next(true);\n    }\n\n    getToken() {\n      return localStorage.getItem('token');\n    }\n\n    setLocationSearching(locationSearching) {\n      localStorage.setItem('locationSearching', JSON.stringify(locationSearching));\n    }\n\n    getLocationSearching() {\n      const locationsearching = JSON.parse(localStorage.getItem('locationSearching'));\n      return new LocationSearching().deserialize(locationsearching);\n    }\n\n    getListPictureUrl() {\n      return JSON.parse(localStorage.getItem('pictures'));\n    }\n\n    setListPictureUrls(pictures) {\n      localStorage.setItem('pictures', JSON.stringify(pictures));\n    }\n\n    removeListPictureUrls() {\n      localStorage.removeItem('pictures');\n    }\n\n    getPicture() {\n      return localStorage.getItem('picture');\n    }\n\n    setPicture(picture) {\n      localStorage.setItem('picture', picture);\n    }\n\n    setLoginInfo(loginInfo) {\n      localStorage.setItem('loginInfo', JSON.stringify(loginInfo));\n    }\n\n    getLoginInfo() {\n      const loginInfo = JSON.parse(localStorage.getItem('loginInfo'));\n\n      if (!loginInfo) {\n        this.doLogout();\n      }\n\n      return loginInfo;\n    }\n\n    removeLoginInfo() {\n      localStorage.removeItem('loginInfo');\n    }\n\n    isUserLoggend() {\n      const isUserLogged = localStorage.getItem('token');\n      return Boolean(isUserLogged);\n    }\n\n    doLogout() {\n      localStorage.removeItem('token');\n      this.removeLoginInfo();\n      this.router.navigate(['/app/auth/login']);\n    }\n\n  }\n\n  LocalStorageService.ɵfac = function LocalStorageService_Factory(t) {\n    return new (t || LocalStorageService)(i0.ɵɵinject(i1.Router));\n  };\n\n  LocalStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LocalStorageService,\n    factory: LocalStorageService.ɵfac,\n    providedIn: 'root'\n  });\n  return LocalStorageService;\n})();","map":null,"metadata":{},"sourceType":"module"}