{"ast":null,"code":"export class MyErrorStateMatcher {\n  isErrorState(control, form) {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && isSubmitted);\n  }\n\n}\nexport class CustomValidators {\n  static noWhiteSpace(control) {\n    const isWhitespace = control.value && control.value.length > 0 && control.value.trim().length === 0;\n    const isValid = !isWhitespace;\n    return isValid ? null : {\n      whitespace: true\n    };\n  }\n\n  static validateControlsValue(firstControlName, secondControlName) {\n    return function (formGroup) {\n      var _a, _b;\n\n      const firstControlValue = (_a = formGroup.get(firstControlName)) === null || _a === void 0 ? void 0 : _a.value;\n      const secondControlValue = (_b = formGroup.get(secondControlName)) === null || _b === void 0 ? void 0 : _b.value;\n      return firstControlValue === secondControlValue ? null : {\n        valueNotMatch: {\n          firstControlValue,\n          secondControlValue\n        }\n      };\n    };\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}