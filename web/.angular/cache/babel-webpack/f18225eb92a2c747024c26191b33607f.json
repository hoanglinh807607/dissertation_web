{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { MyErrorStateMatcher } from \"../../../api/validator\";\nimport { BsDatepickerConfig } from \"ngx-bootstrap/datepicker\";\nimport { Constants } from \"../../../shared/helper/constants\";\nlet ProfileComponent = class ProfileComponent {\n  constructor(modalService, spinner) {\n    this.modalService = modalService;\n    this.spinner = spinner;\n    this.dpConfig = new BsDatepickerConfig();\n    this.formErrors = {};\n    this.matcher = new MyErrorStateMatcher();\n    this.oldImage = '';\n    this.croppedImage = '';\n    this.genderList = [{\n      label: 'Nam',\n      value: 'Male'\n    }, {\n      label: 'Ná»¯',\n      value: 'Female'\n    }];\n  }\n\n  ngOnInit() {}\n\n  isShowError(fieldControl) {\n    const frmControl = this.formGroup.controls;\n    return frmControl[fieldControl].invalid;\n  }\n\n  onUpload() {\n    this.profileRef.nativeElement.value = '';\n    this.profileRef.nativeElement.click();\n  }\n\n  fileChangeEvent(event) {\n    console.log('fileChangeEvent');\n    this.uploadFailedMsg = '';\n    this.imageChangedEvent = event;\n    const target = event.target;\n\n    if (target.files.length <= 0) {\n      return;\n    }\n\n    if (!this.isValidFileUpload(target.files[0])) {\n      this.croppedImage = '';\n      return;\n    }\n\n    this.openDialogUploadImg();\n  }\n\n  isValidFileUpload(file) {\n    if (!Constants.IMAGE_TYPE_SUPPORT_ARRAY.includes(file.type)) {\n      this.uploadFailedMsg = 'The allowable file types are JPEG, PNG, JPG, BMP.';\n      return false;\n    }\n\n    if (file.size >= 10485760) {\n      this.uploadFailedMsg = 'The allowable file size is 10MB.';\n      return false;\n    }\n\n    return true;\n  }\n\n  openDialogUploadImg() {\n    this.modalRef = this.modalService.show(this.uploadFileModalRef, {\n      class: 'modal-dialog modal-dialog-centered'\n    });\n  }\n\n  uploadImg() {\n    return __awaiter(this, void 0, void 0, function* () {// this.spinner.show();\n      // this.imageUrl = await this.uploadFileServiceService.uploadImageToS3(\n      //   this.croppedImage,\n      //   this.fileName\n      // );\n      // this.spinner.hide();\n      // this.modalRef.hide();\n      // this.oldImage = '';\n      // this.newImage = this.croppedImage;\n      // console.log(this.newImage);\n    });\n  }\n\n  imageCropped(event) {\n    // console.log(target.files);\n    this.croppedImage = event.base64;\n  }\n\n  imageLoaded() {\n    console.log('imageLoaded');\n  }\n\n  cropperReady() {\n    console.log('cropperReady');\n  }\n\n  loadImageFailed() {\n    console.log('loadImageFailed');\n  }\n\n  closeImageUploadModal() {\n    this.modalRef.hide();\n  }\n\n};\n\n__decorate([ViewChild('uploadFileModalRef')], ProfileComponent.prototype, \"uploadFileModalRef\", void 0);\n\n__decorate([ViewChild('profileRef')], ProfileComponent.prototype, \"profileRef\", void 0);\n\nProfileComponent = __decorate([Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})], ProfileComponent);\nexport { ProfileComponent };","map":null,"metadata":{},"sourceType":"module"}